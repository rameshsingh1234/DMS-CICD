name: API Testing

on:
  push:
    branches:
      - main

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    name: Test and Scan the APIs
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Verify directory structure
        run: |
          echo "Current directory: $(pwd)"
          echo "Listing root directory contents:"
          ls -la
          echo "Listing TestData directory contents:"
          ls -la TestData
          echo "Listing Configuration directory contents:"
          ls -la Configuration
          echo "Listing TestScript directory contents:"
          ls -la TestScript

      - name: Ensure Logs Directory Exists
        run: mkdir -p Logs

      - name: Run Pytest
        run: pytest -v -s --capture=tee-sys ./TestScript/Test_app.py --html=./reports/Pytest_report.html

      - name: ZAP Scan
        uses: zaproxy/action-api-scan@v0.7.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          format: openapi
          target: 'https://bscytxzsc3.execute-api.ap-south-1.amazonaws.com/payments/summary/get'
          cmd_options: '-J report_json.json -w report_md.md -r report_html.html -a'

      - name: Attach the Test Report
        uses: actions/upload-artifact@v2
        with:
          name: Test Report
          path: reports/Pytest_report.html

      - name: Attach the Zap Report
        uses: actions/upload-artifact@v2
        with:
          name: Zap Report
          path: report_html.html

      - name: Attach the Test Logs
        uses: actions/upload-artifact@v2
        with:
          name: Test Log
          path: Logs/test.log

      - name: Configure Gmail and Send Email
        env:
          GMAIL_USERNAME: ${{ secrets.GMAIL_USERNAME }}
          GMAIL_PASSWORD: ${{ secrets.GMAIL_PASSWORD }}
          RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}
        run: |
          python Utilities/send_email_script.py $GMAIL_USERNAME $GMAIL_PASSWORD $RECIPIENT_EMAIL
