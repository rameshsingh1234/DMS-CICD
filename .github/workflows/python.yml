name: API Testing

on:
  push:
    branches:
      - main

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    name: Test and Scan the APIs
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Test directory
        run: pwd

      - name: List files
        run: ls -la

#      - name: Run Pytest
#        run: pytest ./TestScript/Test_app.py --html-report=./reports/Pytest_report.html

      - name: ZAP Scan
        uses: zaproxy/action-api-scan@v0.7.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          format: openapi
          target: 'https://bscytxzsc3.execute-api.ap-south-1.amazonaws.com/payments/summary/get'
          cmd_options: '-J report_json.json -w report_md.md -r report_html.html -a -c /.zap/rules.tsv'

      - name: Attach the Pytest Report To Gmail
        uses: actions/upload-artifact@v2
        with:
          name: Pytest Report
          path: reports/Pytest_report.html

      - name: Attach the Zap Report To Gmail
        uses: actions/upload-artifact@v2
        with:
          name: Zap Report
          path: report_html.html

      - name: Attach the Test Logs To Gmail
        uses: actions/upload-artifact@v2
        with:
          name: Test Log
          path: Logs/test.log

      - name: Configure Gmail and Send Email
        env:
          GMAIL_USERNAME: ${{ secrets.GMAIL_USERNAME }}
          GMAIL_PASSWORD: ${{ secrets.GMAIL_PASSWORD }}
          RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}  # Replace with the recipient's email
        run: |
          python Utilities/send_email_script.py $GMAIL_USERNAME $GMAIL_PASSWORD $RECIPIENT_EMAIL
